

Setting up YAOURT

sudo pacman -S git
git clone https://aur.archlinux.org/package-query.git 
cd package-query


In a freshly installed Arch Linux, I want to build a package (yaourt package) using makepkg command but I got the following error:

[dhani@arch-vbox]: ~/package-query>$ makepkg -si
==> ERROR: Cannot find the strip binary required for object file stripping.

==> ERROR: An unknown error has occurred. Exiting...

The error was caused by missing required packages to build or compile packages under Arch Linux. This error can be fixed by installing binutils, gcc, pkg-config and make package.

sudo pacman -S binutils make gcc pkg-config fakeroot

Now re run the makepkg package and now all should be resolved.


makepkg -si 
cd .. 
git clone https://aur.archlinux.org/yaourt.git 
cd yaourt 
makepkg -si

======================================================================================

Setting up Flameshot button path

/usr/bin/flameshot gui

======================================================================================

Fast check MAC address at linux

ip a | grep ether | gawk ‘{print $2}’

======================================================================================

Setup network at Ubuntu 20.04 LTS

/etc/netplan/*.yaml
		
network:
    ethernets:
        enp0s3:
            dhcp4: no
            dhcp6: no
            addresses: [192.168.0.116/24, ]
            gateway4: 192.168.0.1
            nameservers:
                    addresses: [192.168.0.1, ]
    version: 2
		
sudo netplan try

======================================================================================

Setup static IP on Centos 7

vi /etc/sysconfig/network-scripts/ifcfg-*

HWADDR=45:08:02:88:AC:68
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
BOOTPROTO=none          # Не используем протокол назначения Ip-адреса
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPADDR=192.168.0.251    # Назначаем статический IP-адрес
NETMASK=255.255.255.0   # Маска подсети (или PREFIX=24)
IPV6INIT=no             # Если не используете IpV6, то его можно отключить
# IPV6_AUTOCONF=yes
# IPV6_DEFROUTE=yes
# IPV6_FAILURE_FATAL=no
# IPV6_ADDR_GEN_MODE=stable-privacy
NAME=enp0s3
UUID=3e9ee32f-0218-4644-a645-e9665057258a
DEVICE=enp0s3
ONBOOT=yes


vi /etc/sysconfig/network

NETWORKING=yes        # Конфигурация сети
GATEWAY=192.168.0.1   # Адрес маршрутизатора


vi /etc/resolv.conf

nameserver 192.168.0.1

nameserver 8.8.8.8
nameserver 8.8.4.4
search meliorem.ru


systemctl restart network

======================================================================================

Setup VBoxLinuxGuestAdditions on Centos 7


1. Получаем root привелегии

    Логинимся как root
    либо переходим к root-у, через sudo -i
    либо выполняем все дальнейшие команды через sudo <команда>.

2. Обновляем ядро


yum update kernel*

 

3. Монтируем образ VirtualBox Guest Additions


mkdir -p /media/VirtualBoxGuestAdditions
mount -r /dev/cdrom /media/VirtualBoxGuestAdditions

 

4. Добавляем репозиторий Epel
	
 
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
 


5. Устанавливаем необходимые пакеты

	
 
yum install gcc kernel-devel kernel-headers dkms make bzip2 perl
 

6. Устанавливаем переменную KERN_DIR

	
 
KERN_DIR=/usr/src/kernels/`uname -r`/build
export KERN_DIR
 

7. Устанавливаем VirtualBox Guest Additions

	
 
cd /media/VirtualBoxGuestAdditions
./VBoxLinuxAdditions.run
 

8. Перезагружаемся
	
 
reboot

======================================================================================

Setup static IP on manjaro

ip a

sudo systemctl disable --now NetworkManager.service


sudo nano /etc/systemd/network/enp0s3.network

[Match]
Name=enp0s3

[Network]
Address=192.168.1.10/24
Gateway=192.168.1.1
DNS=8.8.8.8
DNS=8.8.4.4


sudo systemctl enable --now systemd-networkd.service

======================================================================================

Setup JAVA_HOME

export PATH=$PATH:/usr/lib/jvm/java-11-openjdk-11.0.2.7-2.el8.x86_64/bin/
export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.2.7-2.el8.x86_64/
export J2SDKDIR=/usr/lib/jvm/java-11-openjdk-11.0.2.7-2.el8.x86_64/

======================================================================================

VNC Server Installing

https://losst.ru/nastrojka-x11vnc-na-ubuntu

======================================================================================

List Users in MySQL

SELECT User, Host FROM mysql.user;

======================================================================================

Disable the Beeper on Notebook

https://manjaro.ru/manjaro-xfce-edition/otklyuchit-biper-beeper-sistemnyy-signal-resheno.html

======================================================================================

Alt + Shift on Ubuntu 20.04

sudo apt install gnome-tweaks

Gnome Settings change layer switch

======================================================================================

Zabbix Tuning

/etc/zabbix/zabbix_server.conf

StartPollers=50
StartPreprocessors = 60
StartPollersUnreachable=30
StartPingers=100
CacheSize=64M
HistoryCacheSize=32M
HistoryIndexCacheSize=16M
TrendCacheSize=16M
ValueCacheSize=32M
Timeout=20

======================================================================================

Ubuntu browser video not opening

sudo apt install ubuntu-restricted-extras

======================================================================================

Activating TeamViewer service on Manjaro


sudo systemctl start teamviewerd.service

======================================================================================

VM VBox resolution problems (разрешение не меняется в виртуалке)

When installing VBox Additions, check logs, maybe you will need to install

- gcc , make , perl

Then try again

======================================================================================

Linux set default audio output device


pactl list short sinks

pactl set-default-sink alsa_output.pci-0000_28_00.4.analog-stereo

======================================================================================

Adding current user to docker group, to run command without sudo


sudo gpasswd -a $USER docker

newgrp docker

======================================================================================

For connecting to server through SSH key (PUBLIC KEY ON SERVER, PRIVATE ON HOST)

ON SERVER:

!!! chmod 700 ~/.ssh !!!

ssh-keygen

cat id_rsa.pub > authorized_keys

ON HOST WITH PUTTY:

!!! chmod 600 ~/.ssh !!!

cat id_rsa (COPY TO HOST IN FORMAT .ppk)

puttygen *.ppk -o *

======================================================================================

# CentOS grub updating


sudo vi /etc/default/grub

sudo grub2-mkconfig -o /boot/grub2/grub.cfg


======================================================================================

# Ubuntu grub updating
# Изменение параметров GRUB в Ubuntu

sudo vim /etc/default/grub

GRUB_DEFAULT=saved
GRUB_SAVEDEFAULT=true
GRUB_TIMEOUT=1


sudo update-grub


======================================================================================

Install Auto Vagrant VirtualBox Guest Additions


vagrant plugin install vagrant-vbguest

======================================================================================


в политиках selinux прописано, на каких партах могут работать сервисы; вы используете нестандартный порт для web-сервера
вам понадобится утилита semanage:
yum install policycoreutils-python
если порт 8082 вам не принципиален, то можно посмотреть, на каких портах можно запускать nginx:

# semanage port -l | grep http_port
http_port_t                    tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000


если перечисленные порты вам не подходят, то добавляем ваш порт в разрешенные:
# semanage port -a -t http_port_t -p tcp 8082
перезапускаем nginx 

======================================================================================

Installing ElasticSearch on CentOS


# Previously You should better install JDK, 
# beginning from ELasticSearch 7.* it is already included.

sudo yum -y install java-openjdk-devel java-openjdk

# Adding repository of ELK

cat <<EOF | sudo tee /etc/yum.repos.d/elasticsearch.repo
[elasticsearch-7.x]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF

# Adding GPG key

sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

# Cleaning cache in yum

sudo yum clean all

sudo yum makecache

# Install of ElasticSearch

sudo yum -y install elasticsearch

# Checking install

rpm -qi elasticsearch

# Adding to startup

sudo systemctl enable --now elasticsearch.service 

# Check startup

url http://127.0.0.1:9200

# Test index creating

curl -X PUT "http://127.0.0.1:9200/mytest_index"

# Installing Kibana

sudo yum -y install kibana

# Setup Kibana

sudo vi /etc/kibana/kibana.yml

	server.host: "0.0.0.0"
	server.name: "kibana.example.com"
	elasticsearch.hosts: ["http://localhost:9200"]

# Adding Firewall exceptions

sudo firewall-cmd --add-port=5601/tcp --permanent

sudo firewall-cmd --reload

# Adding Kibana service on startup

sudo systemctl enable --now kibana

# Installing Logstash

sudo yum -y install logstash

# Starting service Logstash

sudo systemctl enable --now logstash

# Additional instruments beats type

sudo yum -y install filebeat auditbeat metricbeat packetbeat heartbeat-elastic

# Enabling at startup service

sudo systemctl enable --now filebeat;

sudo systemctl enable --now auditbeat;

sudo systemctl enable --now metricbeat;

sudo systemctl enable --now packetbeat;

sudo systemctl enable --now heartbeat-elastic;

# ======================================================================================

Installing and configuring Prometheus



======================================================================================

Installing and configuring Ansible (Centos7)

sudo yum install epel-release

sudo yum install ansible



======================================================================================

Manjaro packets delete with Pacman

pacman -Rs название пакета

Далее чисти кэш
pacman -Scc

======================================================================================

Manjaro GRUB background editing

/usr/share/grub/themes/manjaro/background.png

sudo update-grub

======================================================================================

Centos SELINUX disabling


Edit with sudo /etc/selinux/config and set SELINUX=disabled or execute command:

sudo sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config


======================================================================================

## Installing Zookeeper + Kafka on Centos ##


Before installation, be sure that JAVA is installed

For example:

sudo yum install java-11-openjdk-devel

java -version

Then set JAVA_HOME variable to the path to java , put the following strings in ~/.bashrc

JAVA_HOME=/usr/lib/jvm/java-11-openjdk-11.0.12.0.7-0.el7_9.x86_64/bin

bash or relogin

Then download the last version of Zookeeper

https://zookeeper.apache.org/releases.html#download


tar -zxf apache-zookeeper-*.tar.gz

rm apache-zookeeper-*.tar.gz

sudo mv apache-zookeeper-* /usr/local/zookeeper

sudo mkdir -p /var/lib/zookeeper

sed 's/dataDir=\/tmp\/zookeeper/dataDir=\/var\/lib\/zookeeper/' /usr/local/zookeeper/conf/zoo_sample.cfg > /usr/local/zookeeper/conf/zoo.cfg

sudo /usr/local/zookeeper/bin/zkServer.sh start

telnet localhost 2181


After it, we can install Kafka , download it (not source, choose BINARY download)

http://kafka.apache.org/downloads.html

tar -zxf kafka_*.tgz

rm kafka_*.tgz

sudo mv kafka_* /usr/local/kafka

sudo mkdir /tmp/kafka-logs

/usr/local/kafka/bin/kafka-server-start.sh -daemon /usr/local/kafka/config/server.properties

/usr/local/kafka/bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test


server.1=zoo1.example.com:2888:3888

server.2=zoo2.example.com:2888:3888

server.3=zoo3.example.com:2888:3888



======================================================================================

## Installing Jenkins on Centos

sudo yum -y remove java

sudo yum -y install java-1.8.0-openjdk


sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo

sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key


sudo yum install epel-release

sudo yum install java-11-openjdk-devel

sudo yum install jenkins


sudo firewall-cmd --zone=public --add-port=8080/tcp --permanent

sudo firewall-cmd --reload


sudo systemctl enable jenkins

sudo systemctl start jenkins


sudo cat /var/lib/jenkins/secrets/initialAdminPassword


======================================================================================

## Remounting disk in RW mode

sudo mount -o remount,rw /dev/sda2

======================================================================================

# Unix soft

Qbit
sudo apt install qbittorrent

Filezilla
sudo apt install filezilla

Vbox
sudo apt install virtualbox

Gimp
sudo apt install gimp

Pycharm
sudo snap install pycharm-community --classic

Teams

terminator
sudo apt install terminator

anydesk

openconnect
sudo apt install openconnect

citrix workspace

flameshot
flatpak install flameshot

teamviewer

timeshift
sudo apt install timeshift

zoom
Remmina
Telegram
Skype


======================================================================================

# Auto Mounting in Unix through /etc/fstab
# Авто Монтирование устройств в Unix через /etc/fstab

# Check name of device
sudo fdisk -l

# Check UUID for device
sudo blkid

# Edit file /etc/fstab
sudo vim /etc/fstab

# Put the next content to fstab file for mounting by UUID
UUID=af406bcd-cddb-4095-8456-fdf8dfe37665	/var/www	ntfs	defaults	0	0

# Put the next content to fstab file for mounting by device name
/dev/nvme0n1p3	/var/www	ntfs	defaults	0	0

# Winda
UUID=5E1EC01D1EBFEBE1   /media/eugene   ntfs    defaults    0   0

# BIG
UUID=6C986E19986DE1D6   /media/eugene   ntfs    defaults    0   0

======================================================================================

Winda soft

Outlook , office
Avast
GlobalProtect
Skype
Anyconnect
Clipdiary
Lightshot
Spotify
Anydesk
Cisco Workspace Open.ru
Telegram
Windscribe
Photoshop
Winscp
Git
Notepad++
Sumatra
Teams
VBOX
Uninstall tool
Firefox
7 Zip
Qbittorent
KMPlayer


======================================================================================

# Removing problem repos from apt in Ubuntu
# Удаление проблемных репозиториев в Ubuntu

grep -v "^#\|^$" /etc/apt/sources.list{,.d/*.list}

ls -alt /etc/apt/sources.list.d/

sudo rm -rf /etc/apt/sources.list.d/$Problem_repo

======================================================================================


# Correcting time on PC with Linux and Windows
# Изменение времени на ПК с Linux и Windows

# Perform on Linux host(Ubuntu case)
timedatectl set-local-rtc 1

======================================================================================


# Generating Pub (Open) SSH key from a Private key
# Генерация открытого .pub ключа из закрытого ключа SSH

ssh-keygen -y -f ~/.ssh/id_rsa > ~/.ssh/id_rsa.pub

======================================================================================

# GIT tips

# create a new repository on the command line

echo "# inferno" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:kaldihin/inferno.git
git push -u origin main

# push an existing repository from the command line

git remote add origin git@github.com:kaldihin/inferno.git
git branch -M main
git push -u origin main

======================================================================================

# Centos 7 disk resize PV LV
# Изменение размера диска в Centos 7

# Находим нужный раздел , например /dev/sda
sudo fdisk -l

# входим в интерфейс командной строки fdisk
sudo fdisk /dev/sda

# просматриваем список доступных разделов
p

# по умолчанию в CentOS 7 создаются два раздела, конфигурация которых должна выглядеть подобным образом
Устр-во    Загр  Начало   Конец     Блоки     Id  Система
/dev/sda1  *     2048     2099199   1048576   83  Linux
/dev/sda2        2099200  41943039  19921920  8e  Linux LVM

# удаляем раздел «Linux LVM»
d

# создаем новый primary-раздел
n

# Замечание: важно, чтобы созданный раздел начинался с того же сектора, что и ранее удаленный
# изменяем тип созданного раздела на «Linux LVM» (код — 8e)
t

# Замечание: просмотреть список всех типов разделов можно командой «l»

# записываем изменения в таблицу разделов
w

# перезагружаем виртуальную машину
sudo reboot now

# увеличиваем размер физического раздела LVM до максимально возможного
sudo pvresize /dev/sda2

# увеличиваем размер логического раздела LVM до максимально возможного
sudo lvextend /dev/centos/root --extents +100%FREE --resizefs

======================================================================================

# Centos 7 Python 3< install

Step 1 – Install Required Packages

Use the following command to install prerequisites for Python before installing it.

sudo yum install gcc openssl-devel bzip2-devel libffi-devel zlib-devel

Step 2 – Download Python 3.8

Download Python using following command from python official site. You can also download the latest version in place of the specified below.

cd /opt
wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz

Now extract the downloaded package.

tar xzf Python-3.8.12.tgz

Step 3 – Compile Python Source

Use below set of commands to compile python source code on your system using altinstall.

cd Python-3.8.12
sudo ./configure --enable-optimizations
sudo make altinstall

make altinstall is used to prevent replacing the default python binary file /usr/bin/python.

Now remove downloaded source archive file from your system

sudo rm Python-3.8.12.tgz

Step 4 – Check Python Version

Check the latest version installed of python using the following command.

python3.8 -V





The CentOS 7 Linux distribution includes Python 2 by default. However, Python 2 has reached its EOL on January 1, 2020.

In this tutorial, we are going to take a look at how to get up and running with Python 3 on a CentOS 7 server.

These instructions assume that your server has CentOS release 7.7.
Yum Installation

In CentOS 7 releases prior to 7.7, it was necessary to make Python 3 available for installation by setting up third-party repositories, such as the IUS repository, because the CentOS base repository did not provide a Python 3 package. Thankfully, as of CentOS 7.7, Python 3 is available in the base package repository!
Step 1: Update the environment

[root@centos7 ~]# yum update -y

Step 2: Install Python 3

[root@centos7 ~]# yum install -y python3

That’s it! Python 3 is now installed! Another helpful idea to consider is that PIP, the Python package manager for Python 3, is installed alongside the Python 3 package, so we don’t have to worry about that as an additional installation step.
Step 3: Setup the Environment

Install development tools and some prerequisite packages.

[root@centos7 ~]# yum groupinstall -y "Development Tools" && yum install gcc openssl-devel bzip2-devel libffi-devel -y

Step 4: Set Python 3 as default

[root@centos7 ~]# alternatives --install /usr/bin/python python /usr/bin/python2 50[root@centos7 ~]# alternatives --install /usr/bin/python python /usr/bin/python3.6 60[root@centos7 ~]# alternatives --config python

Verify Installation

In order to ensure that Python 3 is in fact installed and useable, we can drop into a Python 3 shell by running the following command.

[root@centos7 ~]# python
Python 3.6.8 (default, Aug  7 2019, 17:28:10) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-39)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>

You should see the version of Python 3 installed on your system as well as a change in the command prompt characters.
Fix for Yum install Errors

Yum package manager usage python2 by default so after you make python3 as default the yum will break.

[root@centos7 ~]# yum install ftp
  File "/usr/bin/yum", line 30
    except KeyboardInterrupt, e:
                            ^
SyntaxError: invalid syntax

Fix it here -

To fix this change the python interpreter to `/usr/bin/python2.7` in two files

[root@centos7 ~]# cat /usr/bin/yum
#!/usr/bin/python2.7[root@centos7 ~]# cat /usr/libexec/urlgrabber-ext-down
#!/usr/bin/python2.7

Source Installation

Installing Python 3 via the Yum package manager is by far the simplest way to get the job done. However, in some cases, you might want to have the most recent version of Python available and that’s where a source installation can come in handy.
Step 1: Setup the Environment

In order to install Python 3 from source, we are going to need to ensure that some prerequisite packages are installed on our system.

[root@centos7 ~]# yum install gcc openssl-devel bzip2-devel libffi-devel -y

Step 2: Download Python

Next, we need to grab the version of Python we want. The following command will pull down the latest stable version of Python 3.8 as of the writing of this article.

[root@centos7 ~]# curl -O https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz

Now we need to extract the file.

[root@centos7 ~]# tar -xzf Python-3.8.1.tgz

Step 3: Install Python 3

Now that it’s extracted, let’s change into the resultant directory.

[root@centos7 ~]# cd Python-3.8.1/

Next, we need to prepare to compile Python from source.

[root@centos7 Python-3.8.1]# ./configure --enable-optimizations

Finally, we are going to use the following command to finish off the installation, without replacing the default system Python on our system.

[root@centos7 Python-3.8.1]# make altinstall

Compiling code from source takes a little while, but once that’s finished, we can test out our new Python 3 version by running the following command.

[root@centos7 Python-3.8.1]# python3.8


======================================================================================

# At Centos yum throws an error Cannot prepare internal mirrorlist: No URLs in mirrorlist

sudo sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-*

sudo sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*

======================================================================================

# Enabling minikube autostart

# Create a systemd file
sudo vim /etc/systemd/system/minikube.service

# Fill this content in that file
[Unit]
Description=Runs minikube on startup
After=docker.service

[Service]
ExecStart=/usr/bin/minikube start
ExecStop=/usr/bin/minikube stop
Type=oneshot
RemainAfterExit=yes
User=eugene
Group=eugene

[Install]
WantedBy=multi-user.target

# Restart systemd daemon and enabling minikube, better to stop minikube before this operations
systemctl daemon-reload

systemctl start minikube

systemctl enable minikube

======================================================================================




